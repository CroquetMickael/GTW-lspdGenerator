import { withIronSessionSsr } from "iron-session/next";
import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { FormBuilder } from "../../../components/FormBuilder";
import { useForm } from "../../../context/form.context";
import { sessionOptions } from "../../../helpers/session";
import useSessionStorage from "../../../hooks/useSessionStorage";

const Home: NextPage = () => {
  const [currentForm, setCurrentForm] = useState();
  const { forms } = useForm();
  const router = useRouter();
  const { name } = router.query;
  const isLogged = useSessionStorage("isLogged");

  useEffect(() => {
    if (!isLogged) {
      sessionStorage.setItem("isLogged", "true");
    }
  }, [isLogged]);

  useEffect(() => {

    if (name) {
      setCurrentForm(forms.find((form: any) => form.id === name));
    }
  }, [forms, name]);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <FormBuilder formData={currentForm} />
    </>
  );
};

export const getServerSideProps = withIronSessionSsr(async function getServerSideProps({
  req,
  res,
}) {
  const isLogged = req.session.isLogged;

  if (isLogged === undefined || isLogged === false) {
    res.setHeader("location", "/login");
    res.statusCode = 302;
    res.end();
  }

  return {
    props: {

    }
  };
},
  sessionOptions);

export default Home;
